name: Secure DevOps Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init -no-color
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -no-color
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Get EC2 IP via AWS CLI
        id: get-ec2-ip
        run: |
          EC2_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=DevOps-Pipeline-Server" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "EC2_IP=$EC2_IP" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      - name: Copy Files to EC2
        uses: appleboy/scp-action@master
        if: ${{ steps.get-ec2-ip.outputs.EC2_IP != '' }}
        with:
          host: ${{ steps.get-ec2-ip.outputs.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/,docker/"
          target: "/home/ubuntu/"

      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: ansible-playbook -i ${{ steps.get-ec2-ip.outputs.EC2_IP }}, playbook.yml --user ubuntu